version: '3.8'

services:

  app:
    build: 
      context: ./app
      dockerfile: Dockerfile
      args:
        user: moshy
        uid: 1000
    image: php-test-php
    container_name: php-test-app
    restart: unless-stopped
    working_dir: /var/www
    entrypoint:  ["./scripts/entrypoint.sh"]
    # depends_on:                           # this control containers shoutdown order
    #   - db
    env_file:
      - ./config/env/app.env
    volumes:
      # - ./app:/var/www              # development
      - ./logs/php:/var/www/logs    # logs
    networks:
      - full-net

  nginx:
    image: nginx:mainline-alpine
    container_name: php-test-http
    restart: unless-stopped
    ports:
      - 88:80
    volumes:
      - ./app:/var/www
      - ./config/nginx:/etc/nginx/conf.d/
      - ./logs/nginx/:/var/log/nginx/
    networks:
      - full-net

  db:                                   # we use this as database host name :)
    image: mysql:5.7
    container_name: php-test-database
    restart: unless-stopped
    env_file:
      - ./config/env/db.env
    volumes:
      - mysql-data:/var/lib/mysql
      # - ./data/mysql:/var/lib/mysql           # Insecure, because ./data/mysql is open...
      # - ./config/mysql:/etc/mysql/conf.d      
      # - ./data/mysql:/docker-entrypoint-initdb.d   # this is especial for this image to initialize (dump) into container database
    networks:
      - full-net

volumes:
  mysql-data:   #> docker volume ls   && docker inspect 234csef

networks:
  full-net:
    driver: bridge

